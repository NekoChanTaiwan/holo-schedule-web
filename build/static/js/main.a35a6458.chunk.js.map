{"version":3,"sources":["components/Menu/index.jsx","components/Main/HoloList/HoloCard/index.jsx","request.js","components/Main/HoloList/index.jsx","components/Main/Current/index.jsx","components/Main/Scheduled/index.jsx","components/Main/About/index.jsx","components/Main/Ended/index.jsx","components/Main/index.jsx","App.jsx","index.js"],"names":["drawerWidth","useStyles","makeStyles","theme","root","display","appBar","zIndex","drawer","transition","transitions","create","easing","sharp","duration","leavingScreen","appBarShift","marginLeft","width","enteringScreen","menuButton","marginRight","hide","flexShrink","whiteSpace","drawerOpen","drawerClose","overflowX","spacing","breakpoints","up","toolbar","alignItems","justifyContent","padding","mixins","link","color","palette","text","primary","textDecoration","Menu","classes","useState","open","setOpen","useEffect","PubSub","publish","AppBar","position","className","clsx","Toolbar","IconButton","edge","onClick","Typography","variant","noWrap","Drawer","paper","List","ListItem","button","ListItemIcon","Divider","map","index","Link","href","replaceAll","toLowerCase","ListItemText","dayjs","extend","localizedFormat","relativeTime","card","boxShadow","grey","title","textOverflow","bold","fontWeight","name","fontSize","HoloCard","props","showPlatform","time","platform","room","cover","member","target","rel","Card","raised","CardActionArea","CardMedia","image","height","component","CardContent","gutterBottom","Grid","container","item","Avatar","src","avatar","format","fromNow","holoDev","axios","baseURL","getCurrent","_","a","get","res","data","lives","getScheduled","getEnded","getMembers","getChannels","res1","res2","channels","marginTop","marginBottom","HoloList","members","setMembers","setChannels","fetchData","setFunc","func","response","justify","undefined","holoData","length","dataObj","find","memObj","id","chaObj","channel","member_id","Current","current","setCurrent","refresh","setInterval","clearInterval","direction","Scheduled","scheduled","setScheduled","About","align","Ended","ended","setEnded","Main","drawerStatus","setDrawerStatus","drawerSubToken","subscribe","unsubscribe","minHeight","window","innerHeight","paddingTop","paddingLeft","useStyle","Container","maxWidth","App","CssBaseline","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.a35a6458.chunk.js","sourcesContent":["import React, { useState, useEffect } from 'react'\r\n\r\nimport PubSub from 'pubsub-js'\r\n\r\nimport clsx from 'clsx'\r\nimport { makeStyles } from '@material-ui/core/styles'\r\nimport { Drawer, AppBar, Toolbar, List, ListItem, ListItemIcon, ListItemText, Link, Typography, Divider, IconButton } from '@material-ui/core'\r\nimport MenuIcon from '@material-ui/icons/Menu'\r\nimport ChevronLeftIcon from '@material-ui/icons/ChevronLeft'\r\nimport PlayArrowIcon from '@material-ui/icons/PlayArrow'\r\nimport ScheduleIcon from '@material-ui/icons/Schedule'\r\nimport AlarmOnIcon from '@material-ui/icons/AlarmOn'\r\n\r\nconst drawerWidth = 240\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  root: {\r\n    display: 'flex',\r\n  },\r\n  appBar: {\r\n    zIndex: theme.zIndex.drawer + 1,\r\n    transition: theme.transitions.create(['width', 'margin'], {\r\n      easing: theme.transitions.easing.sharp,\r\n      duration: theme.transitions.duration.leavingScreen,\r\n    }),\r\n  },\r\n  appBarShift: {\r\n    marginLeft: drawerWidth,\r\n    width: `calc(100% - ${drawerWidth}px)`,\r\n    transition: theme.transitions.create(['width', 'margin'], {\r\n      easing: theme.transitions.easing.sharp,\r\n      duration: theme.transitions.duration.enteringScreen,\r\n    }),\r\n  },\r\n  menuButton: {\r\n    marginRight: 36,\r\n  },\r\n  hide: {\r\n    display: 'none',\r\n  },\r\n  drawer: {\r\n    width: drawerWidth,\r\n    flexShrink: 0,\r\n    whiteSpace: 'nowrap',\r\n  },\r\n  drawerOpen: {\r\n    width: drawerWidth,\r\n    transition: theme.transitions.create('width', {\r\n      easing: theme.transitions.easing.sharp,\r\n      duration: theme.transitions.duration.enteringScreen,\r\n    }),\r\n  },\r\n  drawerClose: {\r\n    transition: theme.transitions.create('width', {\r\n      easing: theme.transitions.easing.sharp,\r\n      duration: theme.transitions.duration.leavingScreen,\r\n    }),\r\n    overflowX: 'hidden',\r\n    width: theme.spacing(7) + 1,\r\n    [theme.breakpoints.up('sm')]: {\r\n      width: theme.spacing(9) + 1,\r\n    },\r\n  },\r\n  toolbar: {\r\n    display: 'flex',\r\n    alignItems: 'center',\r\n    justifyContent: 'center ',\r\n    padding: theme.spacing(0, 1),\r\n    ...theme.mixins.toolbar,\r\n  },\r\n  link: {\r\n    color: theme.palette.text.primary,\r\n    textDecoration: 'none',\r\n    '&:focus, &:hover, &:visited, &:link, &:active': {\r\n      textDecoration: 'none',\r\n    },\r\n  }\r\n}))\r\n\r\nexport default function Menu() {\r\n  const classes = useStyles()\r\n\r\n  const [open, setOpen] = useState(false)\r\n\r\n  useEffect(() => {\r\n    PubSub.publish('Component', 'all')\r\n  }, [])\r\n\r\n  const handleDrawerOpen = () => {\r\n    PubSub.publish('DrawerStatus', true)\r\n    setOpen(true)\r\n  }\r\n\r\n  const handleDrawerClose = () => {\r\n    PubSub.publish('DrawerStatus', false)\r\n    setOpen(false)\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <AppBar\r\n        position='fixed'\r\n        className={clsx(classes.appBar, {\r\n          [classes.appBarShift]: open,\r\n        })}>\r\n        <Toolbar>\r\n          <IconButton\r\n            color='inherit'\r\n            edge='start'\r\n            className={clsx(classes.menuButton, { [classes.hide]: open })}\r\n            onClick={handleDrawerOpen}>\r\n            <MenuIcon />\r\n          </IconButton>\r\n          <Typography variant='h5' noWrap>\r\n            HoloSchedule\r\n          </Typography>\r\n        </Toolbar>\r\n      </AppBar>\r\n      <Drawer\r\n        variant='permanent'\r\n        className={clsx(classes.drawer, {\r\n          [classes.drawerOpen]: open,\r\n          [classes.drawerClose]: !open,\r\n        })}\r\n        classes={{\r\n          paper: clsx({\r\n            [classes.drawerOpen]: open,\r\n            [classes.drawerClose]: !open,\r\n          }),\r\n        }}>\r\n        <List className={classes.toolbar} onClick={handleDrawerClose}>\r\n           <ListItem button className={classes.toolbar} >\r\n            <ListItemIcon>\r\n              <ChevronLeftIcon />\r\n            </ListItemIcon>\r\n          </ListItem>\r\n        </List>\r\n        <Divider />\r\n        <List>\r\n          {['Live', 'Scheduled Lives', 'Ended'].map((text, index) => (\r\n            <Link\r\n              key={text}\r\n              className={classes.link}\r\n              href={`#${text.replaceAll(' ', '_').toLowerCase()}`}>\r\n              <ListItem>\r\n                <ListItemIcon>{\r\n                  index === 0 ? <PlayArrowIcon /> :\r\n                  index === 1 ? <ScheduleIcon /> : <AlarmOnIcon />\r\n                }</ListItemIcon>\r\n                <ListItemText primary={text} />\r\n              </ListItem>\r\n            </Link>\r\n          ))}\r\n        </List>\r\n        <Divider />\r\n      </Drawer>\r\n    </>\r\n  )\r\n}\r\n","import React from 'react'\r\n\r\nimport dayjs from 'dayjs'\r\nimport localizedFormat from 'dayjs/plugin/localizedFormat'\r\nimport relativeTime  from 'dayjs/plugin/relativeTime'\r\n\r\nimport { makeStyles } from '@material-ui/core/styles'\r\nimport { Card, CardActionArea, CardMedia, CardContent, Typography, Grid, Avatar } from '@material-ui/core'\r\n\r\ndayjs.extend(localizedFormat).extend(relativeTime)\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  card: {\r\n    width: 337,\r\n    '&:hover': {\r\n      boxShadow: `3px 3px 5px ${theme.palette.grey[500]}`\r\n    }\r\n  },\r\n  title: {\r\n    textOverflow: 'ellipsis',\r\n  },\r\n  bold: {\r\n    fontWeight: 'bold'\r\n  },\r\n  link: {\r\n    color: theme.palette.text.primary,\r\n    textDecoration: 'none',\r\n    '&:focus, &:hover, &:visited, &:link, &:active': {\r\n      textDecoration: 'none',\r\n    },\r\n  },\r\n  name: {\r\n    fontWeight: 'bold',\r\n    fontSize: '17px',\r\n  }\r\n}))\r\n\r\nconst HoloCard = props => {\r\n  const classes = useStyles()\r\n\r\n  const time = dayjs(props['start_at'])\r\n\r\n  const { platform, room, cover, title, member } = props\r\n\r\n  let link, showPlatform\r\n\r\n  switch(platform) {\r\n    case 'youtube' :\r\n      link = `https://youtu.be/${room}`\r\n      showPlatform = 'YouTube'\r\n      break\r\n\r\n    case 'twitch' :\r\n      link = `https://www.twitch.tv/${room}`\r\n      showPlatform = 'Twitch'\r\n      break\r\n\r\n    default :\r\n      link = '#'\r\n      showPlatform = 'Unknow'\r\n  }\r\n\r\n  return (\r\n    <a className={classes.link} href={link} target='_blank' rel=\"noreferrer\" >\r\n      <Card className={classes.card} raised>\r\n        <CardActionArea>\r\n          <CardMedia className={classes.title} image={cover} width='337' height='190' component='img' />\r\n          <CardContent>\r\n            <Typography variant='inherit' gutterBottom noWrap component='h2'>{title}</Typography>\r\n            <Grid container spacing={1} alignItems='center'>\r\n              <Grid item>\r\n                <Avatar src={member.avatar} />\r\n              </Grid>\r\n              <Grid item>\r\n                <Typography className={classes.name} >\r\n                  {member.name} | {showPlatform}\r\n                </Typography>\r\n                <Typography className={classes.bold} variant='body2' color='textPrimary'>\r\n                  {time.format('LT')} , {time.fromNow()}\r\n                </Typography>\r\n              </Grid>\r\n            </Grid>\r\n          </CardContent>\r\n        </CardActionArea>\r\n      </Card>\r\n    </a>\r\n  )\r\n}\r\n\r\nexport default HoloCard","import axios from 'axios'\r\n\r\nconst holoDev = axios.create({\r\n  baseURL: 'https://holo.dev/api/v1/'\r\n})\r\n\r\nconst getCurrent = async _ => {\r\n  const res = await holoDev.get('lives/current')\r\n  return res.data.lives\r\n}\r\n\r\n\r\nconst getScheduled = async _ => {\r\n  const res = await holoDev.get('lives/scheduled')\r\n  return res.data.lives\r\n}\r\n\r\nconst getEnded = async _ => {\r\n  const res = await holoDev.get('lives/ended')\r\n  return res.data.lives\r\n}\r\n\r\nconst getMembers = async _ => {\r\n  const res = await holoDev.get('members')\r\n  return res.data\r\n}\r\n\r\nconst getChannels = async _ => {\r\n  const res1 = await holoDev.get('channels?limit=100&page=1')\r\n  const res2 = await holoDev.get('channels?limit=100&page=2')\r\n  return [...res1.data.channels, ...res2.data.channels]\r\n}\r\n\r\nexport { getCurrent, getScheduled, getEnded, getMembers, getChannels }\r\n","import React, { useEffect, useState } from 'react'\r\n\r\nimport { makeStyles } from '@material-ui/core/styles'\r\nimport { Grid, Typography } from '@material-ui/core'\r\n\r\nimport HoloCard from './HoloCard'\r\nimport { getMembers, getChannels } from '../../../request'\r\n\r\nconst useStyles = makeStyles({\r\n  container: {\r\n    marginTop: 15,\r\n  },\r\n  item: {\r\n    marginBottom: 20,\r\n    marginRight: 20,\r\n  },\r\n})\r\n\r\nconst HoloList = props => {\r\n  const classes = useStyles()\r\n  const [members, setMembers] = useState([])\r\n  const [channels, setChannels] = useState([])\r\n\r\n  useEffect(() => {\r\n    fetchData(setMembers, getMembers)\r\n    fetchData(setChannels, getChannels)\r\n  }, [])\r\n\r\n  async function fetchData (setFunc, func) {\r\n    const response = await func()\r\n    setFunc(response)\r\n  }\r\n\r\n  return (\r\n    <Grid container justify='flex-start' className={classes.container}>{\r\n      props.holoData === undefined || members.length === 0 || channels.length === 0 ?\r\n      <Typography variant='h6'>Loading...</Typography> :\r\n      props.holoData.map(dataObj => (\r\n        <Grid item key={dataObj.id} className={classes.item}>\r\n          <HoloCard {...dataObj} member={members.find(memObj => {\r\n            return memObj.id === channels.find(chaObj => {\r\n              return chaObj.channel === dataObj.channel\r\n            }).member_id\r\n          })}/>\r\n        </Grid>\r\n      ))\r\n    }</Grid>\r\n  )\r\n}\r\n\r\nexport default HoloList\r\n","import React, { useState, useEffect } from 'react'\r\n\r\nimport { Grid, Typography, Divider } from '@material-ui/core'\r\nimport PlayArrowIcon from '@material-ui/icons/PlayArrow'\r\n\r\nimport HoloList from '../HoloList'\r\nimport { getCurrent } from '../../../request'\r\n\r\nconst Current = _ => {\r\n  const [current, setCurrent] = useState()\r\n\r\n  const fetchData = async (setFunc, func) => {\r\n    const response = await func()\r\n    setFunc(response)\r\n  }\r\n\r\n  useEffect(_ => {\r\n    fetchData(setCurrent, getCurrent)\r\n\r\n    const refresh = setInterval(() => {\r\n      fetchData(setCurrent, getCurrent)\r\n    }, 60 * 1000)\r\n\r\n    return () => clearInterval(refresh)\r\n  }, [])\r\n\r\n  return (\r\n    <>\r\n      <Grid id='live' container direction='row' alignItems='center'>\r\n        <PlayArrowIcon color='primary' />\r\n        &nbsp;\r\n        <Typography variant='h6' color='primary' >\r\n          Live ({current === undefined ? '' : current.length})\r\n        </Typography>\r\n      </Grid>\r\n\r\n      <Divider />\r\n\r\n      <HoloList holoData={current} />\r\n    </>\r\n  )\r\n}\r\n\r\nexport default Current\r\n","import React, { useState, useEffect } from 'react'\r\n\r\nimport { Grid, Typography, Divider } from '@material-ui/core'\r\nimport ScheduleIcon from '@material-ui/icons/Schedule'\r\n\r\nimport HoloList from '../HoloList'\r\nimport { getScheduled } from '../../../request'\r\n\r\nconst Scheduled = _ => {\r\n  const [scheduled, setScheduled] = useState()\r\n\r\n  const fetchData = async (setFunc, func) => {\r\n    const response = await func()\r\n    setFunc(response)\r\n  }\r\n\r\n  useEffect(_ => {\r\n    fetchData(setScheduled, getScheduled)\r\n\r\n    const refresh = setInterval(() => {\r\n      fetchData(setScheduled, getScheduled)\r\n    }, 60 * 1000)\r\n\r\n    return () => clearInterval(refresh)\r\n  }, [])\r\n\r\n  return (\r\n    <>\r\n      <Grid id='scheduled_lives' container direction='row' alignItems='center'>\r\n        <ScheduleIcon color='primary' />\r\n        &nbsp;\r\n        <Typography variant='h6' color='primary' >\r\n          Scheduled Lives ({scheduled === undefined ? '' : scheduled.length})\r\n        </Typography>\r\n      </Grid>\r\n\r\n      <Divider />\r\n\r\n      <HoloList holoData={scheduled} />\r\n    </>\r\n  )\r\n}\r\n\r\nexport default Scheduled\r\n","import React from 'react'\r\n\r\nimport {  Divider, Typography, Link } from '@material-ui/core'\r\n\r\nconst About = _ => {\r\n  return (\r\n    <>\r\n      <Divider />\r\n\r\n      <Typography align='center' variant='subtitle2' color='textPrimary' >\r\n        Powered by&nbsp;\r\n        <Link href='https://github.com/YunzheZJU/non-stop-story' target='_blank' rel='noreferrer'>Non-stop-story</Link>\r\n        <br />\r\n        Discord : NekoChan#2851\r\n        <br />\r\n        <Link href='https://github.com/NekoChanTaiwan/holo-schedule-web' target='_blank' rel='noreferrer'>NekoChanTaiwan/holo-schedule-web</Link>\r\n      </Typography>\r\n    </>\r\n  )\r\n}\r\n\r\nexport default About","import React, { useState, useEffect } from 'react'\r\n\r\nimport { Grid, Typography, Divider } from '@material-ui/core'\r\nimport AlarmOnIcon from '@material-ui/icons/AlarmOn'\r\n\r\nimport HoloList from '../HoloList'\r\nimport { getEnded } from '../../../request'\r\n\r\nconst Ended = _ => {\r\n  const [ended, setEnded] = useState()\r\n\r\n  const fetchData = async (setFunc, func) => {\r\n    const response = await func()\r\n    setFunc(response)\r\n  }\r\n\r\n  useEffect(_ => {\r\n    fetchData(setEnded, getEnded)\r\n\r\n    const refresh = setInterval(() => {\r\n      fetchData(setEnded, getEnded)\r\n    }, 60 * 1000)\r\n\r\n    return () => clearInterval(refresh)\r\n  }, [])\r\n\r\n  return (\r\n    <>\r\n      <Grid id='ended' container direction='row' alignItems='center'>\r\n        <AlarmOnIcon color='primary' />\r\n        &nbsp;\r\n        <Typography variant='h6' color='primary' >\r\n          Ended ({ended === undefined ? '' : ended.length})\r\n        </Typography>\r\n      </Grid>\r\n\r\n      <Divider />\r\n\r\n      <HoloList holoData={ended} />\r\n    </>\r\n  )\r\n}\r\n\r\nexport default Ended\r\n","import React, { useEffect, useState } from 'react'\r\n\r\nimport PubSub from 'pubsub-js'\r\n\r\nimport { Container } from '@material-ui/core'\r\nimport { makeStyles } from '@material-ui/core/styles'\r\n\r\nimport Current from './Current'\r\nimport Scheduled from './Scheduled'\r\nimport About from './About'\r\nimport Ended from './Ended'\r\n\r\nconst Main = _ => {\r\n  const [drawerStatus, setDrawerStatus] = useState(false)\r\n\r\n  useEffect(() => {\r\n    const drawerSubToken = PubSub.subscribe('DrawerStatus', (_, data) => setDrawerStatus(data))\r\n\r\n    return () => PubSub.unsubscribe(drawerSubToken)\r\n  }, [])\r\n\r\n  const useStyle = makeStyles(theme => ({\r\n    container: {\r\n      // backgroundColor: theme.palette.grey[800],\r\n      minHeight: `${window.innerHeight}px`,\r\n      paddingTop: `${theme.mixins.toolbar.minHeight + 25}px`,\r\n      paddingLeft: drawerStatus ? '260px' : '92px',\r\n      transition: theme.transitions.create('padding-left', {\r\n        easing: theme.transitions.easing.sharp,\r\n        duration: theme.transitions.duration.enteringScreen,\r\n      }),\r\n    }\r\n  }))\r\n\r\n  const classes = useStyle()\r\n\r\n  return (\r\n    <Container className={classes.container} maxWidth='xl'>\r\n      <Current />\r\n      <Scheduled />\r\n      <Ended />\r\n      <About />\r\n    </Container>\r\n  )\r\n}\r\n\r\nexport default Main\r\n","import React from 'react'\r\n\r\nimport { CssBaseline } from '@material-ui/core'\r\n\r\n// import { darkTheme } from './theme'\r\nimport Menu from './components/Menu'\r\nimport Main from './components/Main'\r\n\r\nconst App = _ => {\r\n  return (\r\n    <>\r\n      <CssBaseline />\r\n      {/* <ThemeProvider> */}\r\n        <Menu />\r\n        <Main />\r\n      {/* </ThemeProvider> */}\r\n    </>\r\n  )\r\n}\r\n\r\nexport default App","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'))"],"sourceRoot":""}